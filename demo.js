/* Generated by the Nim Compiler v0.15.3 */
/*   (c) 2016 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI52214 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI50017 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI49620 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI49405 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI49403 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI49614 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI49611 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI49608 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI49605 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI49602 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI52202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI52223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI52227 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI57043 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI57044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI57050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI57069 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3456 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3483 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
var NNI3436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3436.node = NNI3436;
NTI3483.base = NTI3424;
var NNI3424 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3483, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3424.node = NNI3424;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI3424.base = NTI3408;
NTI3436.base = NTI3424;
NTI3440.base = NTI3436;
var NNI12409 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI12409.node = NNI12409;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3438.base = NTI3436;
var NNI3456 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3456.node = NNI3456;
NTI3456.base = NTI3424;
var NNI57050 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI57050.node = NNI57050;
NTI57069.base = NTI57050;
var NNI3452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3452.node = NNI3452;
NTI3452.base = NTI3424;
var NNI57044 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI57044.node = NNI57044;
NTI57043.base = NTI57044;
var NNI3444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3444.node = NNI3444;
NTI3444.base = NTI3424;
var NNI52227 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52227.node = NNI52227;
var NNI52202 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: [{kind: 1, offset: 0, typ: NTI52202, name: "lvlAll", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI52202, name: "lvlDebug", len: 0, sons: null}, 
{kind: 1, offset: 2, typ: NTI52202, name: "lvlInfo", len: 0, sons: null}, 
{kind: 1, offset: 3, typ: NTI52202, name: "lvlNotice", len: 0, sons: null}, 
{kind: 1, offset: 4, typ: NTI52202, name: "lvlWarn", len: 0, sons: null}, 
{kind: 1, offset: 5, typ: NTI52202, name: "lvlError", len: 0, sons: null}, 
{kind: 1, offset: 6, typ: NTI52202, name: "lvlFatal", len: 0, sons: null}, 
{kind: 1, offset: 7, typ: NTI52202, name: "lvlNone", len: 0, sons: null}]};
NTI52202.node = NNI52202;
var NNI52223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelthreshold", len: 0, typ: NTI52202, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtstr", len: 0, typ: NTI138, name: "fmtStr", sons: null}]};
NTI52223.node = NNI52223;
NTI52223.base = NTI3408;
NTI52227.base = NTI52223;
NTI49605.base = NTI104;
NTI49608.base = NTI104;
NTI49611.base = NTI104;
NTI49614.base = NTI104;
var NNI49403 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: [{kind: 1, offset: 0, typ: NTI49403, name: "mJan", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI49403, name: "mFeb", len: 0, sons: null}, 
{kind: 1, offset: 2, typ: NTI49403, name: "mMar", len: 0, sons: null}, 
{kind: 1, offset: 3, typ: NTI49403, name: "mApr", len: 0, sons: null}, 
{kind: 1, offset: 4, typ: NTI49403, name: "mMay", len: 0, sons: null}, 
{kind: 1, offset: 5, typ: NTI49403, name: "mJun", len: 0, sons: null}, 
{kind: 1, offset: 6, typ: NTI49403, name: "mJul", len: 0, sons: null}, 
{kind: 1, offset: 7, typ: NTI49403, name: "mAug", len: 0, sons: null}, 
{kind: 1, offset: 8, typ: NTI49403, name: "mSep", len: 0, sons: null}, 
{kind: 1, offset: 9, typ: NTI49403, name: "mOct", len: 0, sons: null}, 
{kind: 1, offset: 10, typ: NTI49403, name: "mNov", len: 0, sons: null}, 
{kind: 1, offset: 11, typ: NTI49403, name: "mDec", len: 0, sons: null}]};
NTI49403.node = NNI49403;
var NNI49405 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: [{kind: 1, offset: 0, typ: NTI49405, name: "dMon", len: 0, sons: null}, 
{kind: 1, offset: 1, typ: NTI49405, name: "dTue", len: 0, sons: null}, 
{kind: 1, offset: 2, typ: NTI49405, name: "dWed", len: 0, sons: null}, 
{kind: 1, offset: 3, typ: NTI49405, name: "dThu", len: 0, sons: null}, 
{kind: 1, offset: 4, typ: NTI49405, name: "dFri", len: 0, sons: null}, 
{kind: 1, offset: 5, typ: NTI49405, name: "dSat", len: 0, sons: null}, 
{kind: 1, offset: 6, typ: NTI49405, name: "dSun", len: 0, sons: null}]};
NTI49405.node = NNI49405;
NTI49620.base = NTI104;
var NNI49602 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "second", len: 0, typ: NTI49605, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI49608, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI49611, name: "hour", sons: null}, 
{kind: 1, offset: "monthday", len: 0, typ: NTI49614, name: "monthday", sons: null}, 
{kind: 1, offset: "month", len: 0, typ: NTI49403, name: "month", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI104, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI49405, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI49620, name: "yearday", sons: null}, 
{kind: 1, offset: "isdst", len: 0, typ: NTI130, name: "isDST", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI104, name: "timezone", sons: null}]};
NTI49602.node = NNI49602;
NTI49602.base = NTI3408;
NTI50017.base = NTI49405;
NTI52214.base = NTI138;
function makeNimstrLit(c_13403) {

    var ln = c_13403.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13403.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_18514, src_18515, ti_18516) {

var result_18829 = null;
switch (ti_18516.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_18497(ti_18516))) {
result_18829 = src_18515;
}
else {
result_18829 = [src_18515[0], src_18515[1]];}


break;
case 19:       if (dest_18514 === null || dest_18514 === undefined) {
        dest_18514 = {};
      }
      else {
        for (var key in dest_18514) { delete dest_18514[key]; }
      }
      for (var key in src_18515) { dest_18514[key] = src_18515[key]; }
      result_18829 = dest_18514;
    
break;
case 18: case 17: if (!((ti_18516.base == null))) {
result_18829 = nimCopy(dest_18514, src_18515, ti_18516.base);
}
else {
if ((ti_18516.kind == 17)) {
result_18829 = (dest_18514 === null || dest_18514 === undefined) ? {m_type: ti_18516} : dest_18514;}
else {
result_18829 = (dest_18514 === null || dest_18514 === undefined) ? {} : dest_18514;}
}
nimCopyAux(result_18829, src_18515, ti_18516.node);

break;
case 24: case 4: case 27: case 16:       if (src_18515 === null) {
        result_18829 = null;
      }
      else {
        if (dest_18514 === null || dest_18514 === undefined) {
          dest_18514 = new Array(src_18515.length);
        }
        else {
          dest_18514.length = src_18515.length;
        }
        result_18829 = dest_18514;
        for (var i = 0; i < src_18515.length; ++i) {
          result_18829[i] = nimCopy(result_18829[i], src_18515[i], ti_18516.base);
        }
      }
    
break;
case 28:       if (src_18515 !== null) {
        result_18829 = src_18515.slice(0);
      }
    
break;
default: 
result_18829 = src_18515;
break;
}
return result_18829;
}
function eqStrings(a_16003, b_16004) {

    if (a_16003 == b_16004) return true;
    if ((!a_16003) || (!b_16004)) return false;
    var alen = a_16003.length;
    if (alen != b_16004.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16003[i] != b_16004[i]) return false;
    return true;
  }
function arrayConstr(len_19003, value_19004, typ_19005) {

      var result = new Array(len_19003);
      for (var i = 0; i < len_19003; ++i) result[i] = nimCopy(null, value_19004, typ_19005);
      return result;
    }
function cstrToNimstr(c_13603) {

  var ln = c_13603.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_13603.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function toJSStr(s_13803) {

    var len = s_13803.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_13803[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_13803[i] < 128)
        asciiPart[i] = fcc(s_13803[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  }
function raiseException(e_12806, ename_12807) {

e_12806.name = ename_12807;
if ((excHandler == 0)) {
unhandledException(e_12806);
}

e_12806.trace = nimCopy(null, rawwritestacktrace_12628(), NTI138);
throw e_12806;}
function mulInt(a_16603, b_16604) {

      var result = a_16603 * b_16604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function addInt(a_16256, b_16257) {

      var result = a_16256 + b_16257;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    }
function chckRange(i_19015, a_19016, b_19017) {

var Tmp1;
var result_19018 = 0;
BeforeRet: do {
if (!(a_19016 <= i_19015)) Tmp1 = false; else {Tmp1 = (i_19015 <= b_19017); }if (Tmp1) {
result_19018 = i_19015;
break BeforeRet;
}
else {
raiseRangeError();
}

} while (false); 
return result_19018;
}
function chckIndx(i_19009, a_19010, b_19011) {

var Tmp1;
var result_19012 = 0;
BeforeRet: do {
if (!(a_19010 <= i_19009)) Tmp1 = false; else {Tmp1 = (i_19009 <= b_19011); }if (Tmp1) {
result_19012 = i_19009;
break BeforeRet;
}
else {
raiseIndexError();
}

} while (false); 
return result_19012;
}
function isObj(obj_19075, subclass_19076) {

var result_19077 = false;
BeforeRet: do {
var x_19078 = obj_19075;
if ((x_19078 == subclass_19076)) {
result_19077 = true;
break BeforeRet;
}

L1: do {
L2: while (true) {
if (!!((x_19078 == subclass_19076))) break L2;
if ((x_19078 == null)) {
result_19077 = false;
break BeforeRet;
}

x_19078 = x_19078.base;
}
} while(false);
result_19077 = true;
break BeforeRet;
} while (false); 
return result_19077;
}
function mnewString(len_14003) {

      var result = new Array(len_14003+1);
      result[0] = 0;
      result[len_14003] = 0;
      return result;
    }
function addChar(x_19116, c_19117) {

    x_19116[x_19116.length-1] = c_19117; x_19116.push(0);
  }
var weekdays_50014 = nimCopy(null, [6, 0, 1, 2, 3, 4, 5], NTI50017);
var Levelnames_52211 = nimCopy(null, [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")], NTI52214);
var nimvm_5887 = false;
var nim_program_result = 0;
var globalraisehook_10414 = [null];
var localraisehook_10419 = [null];
var outofmemhook_10422 = [null];
function isfatpointer_18497(ti_18499) {

var result_18500 = false;
BeforeRet: do {
result_18500 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_18499.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_18500;
}
function nimCopyAux(dest_18519, src_18520, n_18522) {

switch (n_18522.kind) {
case 0: 
break;
case 1:       dest_18519[n_18522.offset] = nimCopy(dest_18519[n_18522.offset], src_18520[n_18522.offset], n_18522.typ);
    
break;
case 2: L1: do {
var i_18815 = 0;
var HEX3Atmp_18817 = 0;
HEX3Atmp_18817 = (n_18522.len - 1);
var res_18820 = 0;
L2: do {
L3: while (true) {
if (!(res_18820 <= HEX3Atmp_18817)) break L3;
i_18815 = res_18820;
nimCopyAux(dest_18519, src_18520, n_18522.sons[i_18815]);
res_18820 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_18519[n_18522.offset] = nimCopy(dest_18519[n_18522.offset], src_18520[n_18522.offset], n_18522.typ);
      for (var i = 0; i < n_18522.sons.length; ++i) {
        nimCopyAux(dest_18519, src_18520, n_18522.sons[i][1]);
      }
    
break;
}
}
function add_10438(x_10441, x_10441_Idx, y_10442) {

        var len = x_10441[0].length-1;
        for (var i = 0; i < y_10442.length; ++i) {
          x_10441[0][len] = y_10442.charCodeAt(i);
          ++len;
        }
        x_10441[0][len] = 0
      }
function auxwritestacktrace_12404(f_12406) {

var Tmp3;
var result_12407 = [null];
var it_12415 = f_12406;
var i_12416 = 0;
var total_12417 = 0;
var tempframes_12421 = arrayConstr(64, {Field0: null, Field1: 0}, NTI12409);
L1: do {
L2: while (true) {
if (!!((it_12415 == null))) Tmp3 = false; else {Tmp3 = (i_12416 <= 63); }if (!Tmp3) break L2;
tempframes_12421[i_12416].Field0 = it_12415.procname;
tempframes_12421[i_12416].Field1 = it_12415.line;
i_12416 += 1;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_12415 == null))) break L5;
total_12417 += 1;
it_12415 = it_12415.prev;
}
} while(false);
result_12407[0] = nimCopy(null, makeNimstrLit(""), NTI138);
if (!((total_12417 == i_12416))) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_12407[0] = makeNimstrLit("(");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr(((total_12417 - i_12416))+"")); } else { result_12407[0] = cstrToNimstr(((total_12417 - i_12416))+"");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_12407[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_12615 = 0;
var HEX3Atmp_12621 = 0;
HEX3Atmp_12621 = (i_12416 - 1);
var res_12624 = HEX3Atmp_12621;
L7: do {
L8: while (true) {
if (!(0 <= res_12624)) break L8;
j_12615 = res_12624;
add_10438(result_12407, 0, tempframes_12421[j_12615].Field0);
if ((0 < tempframes_12421[j_12615].Field1)) {
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_12407[0] = makeNimstrLit(", line: ");};
if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(cstrToNimstr((tempframes_12421[j_12615].Field1)+"")); } else { result_12407[0] = cstrToNimstr((tempframes_12421[j_12615].Field1)+"");};
}

if (result_12407[0] != null) { result_12407[0] = (result_12407[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_12407[0] = makeNimstrLit("\x0A");};
res_12624 -= 1;
}
} while(false);
} while(false);
return result_12407[0];
}
function rawwritestacktrace_12628() {

var result_12630 = null;
if (!((framePtr == null))) {
result_12630 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxwritestacktrace_12404(framePtr)), NTI138);
}
else {
result_12630 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
}

return result_12630;
}
function unhandledException(e_12654) {

var Tmp1;
var buf_12655 = /**/[makeNimstrLit("")];
if (!!(eqStrings(e_12654.message, null))) Tmp1 = false; else {Tmp1 = !((e_12654.message[0] == 0)); }if (Tmp1) {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception: ");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(e_12654.message); } else { buf_12655[0] = e_12654.message;};
}
else {
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_12655[0] = makeNimstrLit("Error: unhandled exception");};
}

if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_12655[0] = makeNimstrLit(" [");};
add_10438(buf_12655, 0, e_12654.name);
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_12655[0] = makeNimstrLit("]\x0A");};
if (buf_12655[0] != null) { buf_12655[0] = (buf_12655[0].slice(0, -1)).concat(rawwritestacktrace_12628()); } else { buf_12655[0] = rawwritestacktrace_12628();};
var cbuf_12801 = toJSStr(buf_12655[0]);
framePtr = null;
  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_12801);
  }
  else {
    throw cbuf_12801;
  }
  }
function raiseOverflow() {

var e_13236 = null;
e_13236 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null};
e_13236.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
raiseException(e_13236, "OverflowError");
}
function raiseDivByZero() {

var e_13252 = null;
e_13252 = {m_type: NTI3438, parent: null, name: null, message: null, trace: null};
e_13252.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
raiseException(e_13252, "DivByZeroError");
}
function gettime_49642() {

var result_50013 = null;
var F={procname:"times.getTime",prev:framePtr,filename:"lib/pure/times.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 592;
result_50013 = new Date();
break BeforeRet;
} while (false); 
framePtr = F.prev;
return result_50013;
}
var startmilsecs_50048 = /**/[gettime_49642()];
var level_52407 = [0];
var handlers_52409 = [null];
var lc_56247 = [{}];
function newseq_57064(len_57068) {

var result_57070 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
result_57070 = new Array(len_57068); for (var i=0;i<len_57068;++i) {result_57070[i]={Field0: 0.0, Field1: 0.0};}framePtr = F.prev;
return result_57070;
}
function raiseRangeError() {

var e_13268 = null;
e_13268 = {m_type: NTI3456, parent: null, name: null, message: null, trace: null};
e_13268.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
raiseException(e_13268, "RangeError");
}
function raiseIndexError() {

var e_13284 = null;
e_13284 = {m_type: NTI3452, parent: null, name: null, message: null, trace: null};
e_13284.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
raiseException(e_13284, "IndexError");
}
function decodecoords_57038(xptr_57040, yptr_57041, len_57042) {

var result_57047 = null;
var F={procname:"quickfrob.decodeCoords",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
F.line = 21;
result_57047 = nimCopy(null, newseq_57064(chckRange(len_57042, 0, 2147483647)), NTI57069);
L1: do {
F.line = 22;
var idx_57098 = 0;
F.line = 3684;
var i_57115 = 0;
L2: do {
F.line = 3685;
L3: while (true) {
if (!(i_57115 < len_57042)) break L3;
F.line = 3684;
idx_57098 = i_57115;
F.line = 23;
nimCopy(result_57047[chckIndx(idx_57098, 0, result_57047.length)-0], {Field0: Module.getValue(addInt((xptr_57040|0), mulInt(4, idx_57098)), 'float'), Field1: Module.getValue(addInt((yptr_57041|0), mulInt(4, idx_57098)), 'float')}, NTI57044);
i_57115 = addInt(i_57115, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_57047;
}
function fold_57117(sq_57119) {

var result_57128 = {Field0: 0.0, Field1: null, Field2: null};
var F={procname:"quickfrob.fold",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
F.line = 30;
var length_57129 = (sq_57119 != null ? sq_57119.length : 0);
F.line = 31;
var sqptr_57131 = Module._malloc(mulInt(addInt(length_57129, 1), 1));
F.line = 32;
var strucptr_57133 = Module._malloc(mulInt(addInt(length_57129, 1), 1));
F.line = 33;
var xptr_57135 = Module._malloc(mulInt(length_57129, 8));
F.line = 34;
var yptr_57137 = Module._malloc(mulInt(length_57129, 8));
F.line = 35;
try {
Module.stringToUTF8(sq_57119, sqptr_57131, addInt(length_57129, 1));
F.line = 42;
var energy_57138 = _vrna_fold(sqptr_57131, strucptr_57133);
F.line = 43;
var ptable_57139 = _vrna_ptable(strucptr_57133);
F.line = 44;
var test_57140 = _simple_xy_coordinates(ptable_57139, xptr_57135, yptr_57137);
F.line = 45;
try {
F.line = 46;
result_57128.Field0 = energy_57138;
F.line = 47;
result_57128.Field1 = Module.UTF8ToString(strucptr_57133);
F.line = 48;
result_57128.Field2 = nimCopy(null, decodecoords_57038(xptr_57135, yptr_57137, length_57129), NTI57043);
} finally {
framePtr = F;
Module._free(ptable_57139);
}
} finally {
framePtr = F;
Module._free(sqptr_57131);
Module._free(strucptr_57133);
Module._free(xptr_57135);
Module._free(yptr_57137);
}
framePtr = F.prev;
return result_57128;
}
function sysfatal_20821(message_20827) {

var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
F.line = 2578;
var e_20829 = null;
e_20829 = {m_type: NTI3444, parent: null, name: null, message: null, trace: null};
F.line = 2580;
e_20829.message = nimCopy(null, message_20827, NTI138);
F.line = 2581;
raiseException(e_20829, "AssertionError");
framePtr = F.prev;
}
function raiseassert_20816(msg_20818) {

var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
sysfatal_20821(msg_20818);
framePtr = F.prev;
}
function failedassertimpl_20839(msg_20841) {

var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
framePtr = F;
raiseassert_20816(msg_20841);
framePtr = F.prev;
}
function makentide_57730(s_57735, size_57737, color_57744) {

function HEX3Aanonymous_57745(d_57750) {

var result_57751 = null;
var F={procname:"makeNTide.:anonymous",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
F.line = 107;
result_57751 = toJSStr(cstrToNimstr(((d_57750.Field0 + 3.0000000000000000e+01))+""));
framePtr = F.prev;
return result_57751;
}
function HEX3Aanonymous_57770(d_57775) {

var result_57776 = null;
var F={procname:"makeNTide.:anonymous",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
F.line = 108;
result_57776 = toJSStr(cstrToNimstr(((d_57775.Field1 + 3.0000000000000000e+01))+""));
framePtr = F.prev;
return result_57776;
}
var F={procname:"makeNTide.makeNTide",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
s_57735.attr("cx", HEX3Aanonymous_57745).attr("cy", HEX3Aanonymous_57770).attr("r", size_57737).attr("stroke-width", "3px").attr("stroke", "black").style("fill", color_57744);
framePtr = F.prev;
}
function main_57154() {

function dothemagic_57189() {

function colorize_57663(d_57668, i_57669) {

var Tmp1;
var result_57670 = null;
var F={procname:"doTheMagic.colorize",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
F.line = 93;
F.line = 93;
switch (sq_57327[chckIndx(i_57669, 0, sq_57327.length)-0]) {
case 103: case 71: Tmp1 = makeNimstrLit("#CF2E00");

break;
case 97: case 65: Tmp1 = makeNimstrLit("#016481");

break;
case 116: case 84: Tmp1 = makeNimstrLit("#009244");

break;
case 117: case 85: Tmp1 = makeNimstrLit("#004E24");

break;
case 99: case 67: Tmp1 = makeNimstrLit("#CF6800");

break;
default: 
Tmp1 = makeNimstrLit("#606060");
break;
}
result_57670 = toJSStr(Tmp1);
framePtr = F.prev;
return result_57670;
}
var F={procname:"main.doTheMagic",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 61;
var sq_57327 = cstrToNimstr(textbox_57156.property("value"));
if (((sq_57327 != null ? sq_57327.length-1 : 0) == 0)) {
F.line = 63;
break BeforeRet;
}

F.line = 65;
var res_57328 = fold_57117(toJSStr(sq_57327));
F.line = 66;
var maxx_57329 = 0.0;
F.line = 67;
var minx_57330 = 1.0000000000000000e+06;
F.line = 68;
var maxy_57331 = 0.0;
F.line = 69;
var miny_57332 = 1.0000000000000000e+06;
F.line = 72;
var newcoords_57364 = newseq_57064(chckRange((sq_57327 != null ? sq_57327.length-1 : 0), 0, 2147483647));
L1: do {
F.line = 73;
var elem_57602 = {Field0: 0.0, Field1: 0.0};
F.line = 3490;
var HEX3Atmp_57956 = null;
F.line = 73;
HEX3Atmp_57956 = res_57328.Field2;
F.line = 3492;
var i_57959 = 0;
F.line = 3493;
var L_57961 = (HEX3Atmp_57956 != null ? HEX3Atmp_57956.length : 0);
L2: do {
F.line = 3494;
L3: while (true) {
if (!(i_57959 < L_57961)) break L3;
F.line = 3495;
elem_57602 = HEX3Atmp_57956[chckIndx(i_57959, 0, HEX3Atmp_57956.length)-0];
if ((maxx_57329 < elem_57602.Field0)) {
F.line = 77;
maxx_57329 = elem_57602.Field0;
}

if ((elem_57602.Field0 < minx_57330)) {
F.line = 79;
minx_57330 = elem_57602.Field0;
}

if ((maxy_57331 < elem_57602.Field1)) {
F.line = 81;
maxy_57331 = elem_57602.Field1;
}

if ((elem_57602.Field1 < miny_57332)) {
F.line = 83;
miny_57332 = elem_57602.Field1;
}

i_57959 = addInt(i_57959, 1);
if (!(((HEX3Atmp_57956 != null ? HEX3Atmp_57956.length : 0) == L_57961))) {
failedassertimpl_20839(makeNimstrLit("len(a) == L seq modified while iterating over it"));
}

}
} while(false);
} while(false);
L4: do {
F.line = 88;
var idx_57636 = 0;
F.line = 88;
var elem_57637 = {Field0: 0.0, Field1: 0.0};
F.line = 2097;
var HEX3Atmp_57963 = null;
F.line = 88;
HEX3Atmp_57963 = res_57328.Field2;
F.line = 2099;
var i_57966 = 0;
L5: do {
F.line = 2100;
L6: while (true) {
if (!(i_57966 < (HEX3Atmp_57963 != null ? HEX3Atmp_57963.length : 0))) break L6;
F.line = 2099;
idx_57636 = i_57966;
F.line = 2101;
elem_57637 = HEX3Atmp_57963[chckIndx(i_57966, 0, HEX3Atmp_57963.length)-0];
F.line = 89;
newcoords_57364[chckIndx(idx_57636, 0, newcoords_57364.length)-0].Field0 = (elem_57637.Field0 - minx_57330);
F.line = 90;
newcoords_57364[chckIndx(idx_57636, 0, newcoords_57364.length)-0].Field1 = (elem_57637.Field1 - miny_57332);
i_57966 = addInt(i_57966, 1);
}
} while(false);
} while(false);
svg_57188.attr("width", ((maxx_57329 - minx_57330) + 4.0000000000000000e+01)).attr("height", ((maxy_57331 - miny_57332) + 4.0000000000000000e+01));
makentide_57730(svg_57188.selectAll("circle").data(newcoords_57364), 7, colorize_57663);
makentide_57730(svg_57188.selectAll("circle").data(newcoords_57364).enter().append("circle"), 7, colorize_57663);
svg_57188.selectAll("circle").data(newcoords_57364).exit().remove();
} while (false); 
framePtr = F.prev;
}
var F={procname:"quickfrob.main",prev:framePtr,filename:"quickfrob.nim",line:0};
framePtr = F;
F.line = 54;
var textbox_57156 = d3.select("#sequence");
F.line = 55;
var svg_57188 = d3.select("div").append("svg").attr("width", 10).attr("height", 10);
textbox_57156.on("change", dothemagic_57189, false);
dothemagic_57189();
framePtr = F.prev;
}
main_57154();
function nsuToLowerAsciiChar(c_41792) {

var result_41793 = 0;
var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"lib/pure/strutils.nim",line:0};
framePtr = F;
if ((SetConstr([65, 90])[c_41792] != undefined)) {
F.line = 210;
result_41793 = chckRange(addInt(c_41792, 32), 0, 255);
}
else {
F.line = 212;
result_41793 = c_41792;
}

framePtr = F.prev;
return result_41793;
}
function nsuToLowerChar(c_41956) {

var result_41957 = 0;
var F={procname:"strutils.toLower",prev:framePtr,filename:"lib/pure/strutils.nim",line:0};
framePtr = F;
F.line = 335;
result_41957 = nsuToLowerAsciiChar(c_41956);
framePtr = F.prev;
return result_41957;
}
function getlocaltime_49644(t_49646) {

var result_50022 = {m_type: NTI49602, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isdst: false, timezone: 0};
var F={procname:"times.getLocalTime",prev:framePtr,filename:"lib/pure/times.nim",line:0};
framePtr = F;
F.line = 599;
result_50022.second = chckRange(t_49646.getSeconds(), 0, 61);
F.line = 600;
result_50022.minute = chckRange(t_49646.getMinutes(), 0, 59);
F.line = 601;
result_50022.hour = chckRange(t_49646.getHours(), 0, 23);
F.line = 602;
result_50022.monthday = chckRange(t_49646.getDate(), 1, 31);
F.line = 603;
result_50022.month = chckRange(t_49646.getMonth(), 0, 11);
F.line = 604;
result_50022.year = t_49646.getFullYear();
F.line = 605;
result_50022.weekday = weekdays_50014[chckIndx(t_49646.getDay(), 0, weekdays_50014.length)-0];
F.line = 606;
result_50022.yearday = 0;
framePtr = F.prev;
return result_50022;
}
function nsuIntToStr(x_43643, minchars_43644) {

var result_43645 = null;
result_43645 = nimCopy(null, cstrToNimstr((Math.abs(x_43643))+""), NTI138);
L1: do {
var i_43655 = 0;
var HEX3Atmp_43657 = 0;
HEX3Atmp_43657 = (minchars_43644 - (result_43645 != null ? result_43645.length-1 : 0));
var res_43660 = 1;
L2: do {
L3: while (true) {
if (!(res_43660 <= HEX3Atmp_43657)) break L3;
i_43655 = res_43660;
result_43645 = nimCopy(null, [48].concat(result_43645), NTI138);
res_43660 += 1;
}
} while(false);
} while(false);
if ((x_43643 < 0)) {
result_43645 = nimCopy(null, [45].concat(result_43645), NTI138);
}

return result_43645;
}
function ntgetDateStr() {

var result_50203 = null;
var F={procname:"times.getDateStr",prev:framePtr,filename:"lib/pure/times.nim",line:0};
framePtr = F;
F.line = 649;
var ti_50204 = getlocaltime_49644(gettime_49642());
F.line = 650;
result_50203 = nimCopy(null, (cstrToNimstr((ti_50204.year)+"").slice(0,-1)).concat([45],nsuIntToStr(addInt(ti_50204.month, 1), 2).slice(0,-1),[45],nsuIntToStr(ti_50204.monthday, 2)), NTI138);
framePtr = F.prev;
return result_50203;
}
function ntgetClockStr() {

var result_50216 = null;
var F={procname:"times.getClockStr",prev:framePtr,filename:"lib/pure/times.nim",line:0};
framePtr = F;
F.line = 655;
var ti_50217 = getlocaltime_49644(gettime_49642());
F.line = 656;
result_50216 = nimCopy(null, (nsuIntToStr(ti_50217.hour, 2).slice(0,-1)).concat([58],nsuIntToStr(ti_50217.minute, 2).slice(0,-1),[58],nsuIntToStr(ti_50217.second, 2)), NTI138);
framePtr = F.prev;
return result_50216;
}
function substitutelog_52412(frmt_52414, level_52415, args_52417) {

var result_52418 = null;
var F={procname:"logging.substituteLog",prev:framePtr,filename:"lib/pure/logging.nim",line:0};
framePtr = F;
F.line = 108;
var msglen_52419 = 0;
L1: do {
F.line = 109;
var arg_52445 = null;
F.line = 1999;
var i_53012 = 0;
L2: do {
F.line = 2000;
L3: while (true) {
if (!(i_53012 < (args_52417 != null ? args_52417.length : 0))) break L3;
F.line = 2001;
arg_52445 = args_52417[chckIndx(i_53012, 0, args_52417.length)-0];
msglen_52419 = addInt(msglen_52419, (arg_52445 != null ? arg_52445.length-1 : 0));
i_53012 = addInt(i_53012, 1);
}
} while(false);
} while(false);
F.line = 111;
result_52418 = nimCopy(null, mnewString(0), NTI138);
F.line = 112;
var i_52456 = 0;
L4: do {
F.line = 113;
L5: while (true) {
if (!(i_52456 < (frmt_52414 != null ? frmt_52414.length-1 : 0))) break L5;
if (!((frmt_52414[chckIndx(i_52456, 0, frmt_52414.length)-0] == 36))) {
if (result_52418 != null) { addChar(result_52418, frmt_52414[chckIndx(i_52456, 0, frmt_52414.length)-0]); } else { result_52418 = [frmt_52414[chckIndx(i_52456, 0, frmt_52414.length)-0], 0]; };
i_52456 = addInt(i_52456, 1);
}
else {
i_52456 = addInt(i_52456, 1);
F.line = 119;
var v_52475 = makeNimstrLit("");
F.line = 120;
var app_52601 = makeNimstrLit("");
L6: do {
F.line = 121;
L7: while (true) {
if (!(SetConstr([97, 122], [65, 90], [48, 57], 95)[frmt_52414[chckIndx(i_52456, 0, frmt_52414.length)-0]] != undefined)) break L7;
if (v_52475 != null) { addChar(v_52475, nsuToLowerChar(frmt_52414[chckIndx(i_52456, 0, frmt_52414.length)-0])); } else { v_52475 = [nsuToLowerChar(frmt_52414[chckIndx(i_52456, 0, frmt_52414.length)-0]), 0]; };
i_52456 = addInt(i_52456, 1);
}
} while(false);
F.line = 124;
switch (toJSStr(v_52475)) {
case "date": if (result_52418 != null) { result_52418 = (result_52418.slice(0, -1)).concat(ntgetDateStr()); } else { result_52418 = ntgetDateStr();};

break;
case "time": if (result_52418 != null) { result_52418 = (result_52418.slice(0, -1)).concat(ntgetClockStr()); } else { result_52418 = ntgetClockStr();};

break;
case "datetime": if (result_52418 != null) { result_52418 = (result_52418.slice(0, -1)).concat((ntgetDateStr().slice(0,-1)).concat(makeNimstrLit("T").slice(0,-1),ntgetClockStr())); } else { result_52418 = (ntgetDateStr().slice(0,-1)).concat(makeNimstrLit("T").slice(0,-1),ntgetClockStr());};

break;
case "app": if (result_52418 != null) { result_52418 = (result_52418.slice(0, -1)).concat(app_52601); } else { result_52418 = app_52601;};

break;
case "appdir": 
break;
case "appname": 
break;
case "levelid": if (result_52418 != null) { addChar(result_52418, Levelnames_52211[chckIndx(level_52415, 0, Levelnames_52211.length)-0][0]); } else { result_52418 = [Levelnames_52211[chckIndx(level_52415, 0, Levelnames_52211.length)-0][0], 0]; };

break;
case "levelname": if (result_52418 != null) { result_52418 = (result_52418.slice(0, -1)).concat(Levelnames_52211[chckIndx(level_52415, 0, Levelnames_52211.length)-0]); } else { result_52418 = Levelnames_52211[chckIndx(level_52415, 0, Levelnames_52211.length)-0];};

break;
default: 
break;
}
}

}
} while(false);
L8: do {
F.line = 136;
var arg_53008 = null;
F.line = 1999;
var i_53018 = 0;
L9: do {
F.line = 2000;
L10: while (true) {
if (!(i_53018 < (args_52417 != null ? args_52417.length : 0))) break L10;
F.line = 2001;
arg_53008 = args_52417[chckIndx(i_53018, 0, args_52417.length)-0];
if (result_52418 != null) { result_52418 = (result_52418.slice(0, -1)).concat(arg_53008); } else { result_52418 = arg_53008;};
i_53018 = addInt(i_53018, 1);
}
} while(false);
} while(false);
framePtr = F.prev;
return result_52418;
}
function log_53028(logger_53030, level_53031, args_53033) {

var Tmp1;
var F={procname:"logging.log",prev:framePtr,filename:"lib/pure/logging.nim",line:0};
framePtr = F;
if (!(level_52407[0] <= level_53031)) Tmp1 = false; else {Tmp1 = (logger_53030.levelthreshold <= level_53031); }if (Tmp1) {
F.line = 149;
var ln_53052 = substitutelog_52412(logger_53030.fmtstr, level_53031, args_53033);
F.line = 151;
var cln_53201 = toJSStr(ln_53052);
F.line = 152;
console.log(cln_53201);}

framePtr = F.prev;
}
function log_53019(logger_53021, level_53022, args_53024) {

var F={procname:"logging.log",prev:framePtr,filename:"lib/pure/logging.nim",line:0};
framePtr = F;
framePtr = F.prev;
}
function log_53026(logger_53021, level_53022, args_53024) {

var F={procname:"logging.log",prev:framePtr,filename:"lib/pure/logging.nim",line:0};
framePtr = F;
if (isObj(logger_53021.m_type, NTI52227)) {
log_53028(logger_53021, level_53022, args_53024);
}
else {
if (isObj(logger_53021.m_type, NTI52223)) {
log_53019(logger_53021, level_53022, args_53024);
}
}
framePtr = F.prev;
}
